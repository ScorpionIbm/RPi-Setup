#!/bin/bash -e
#FQ_Codel
#############SETUP VARIABLES###############################################################################################

PATH=/bin:/usr/bin:/sbin:/usr/sbin

#Files
	status=/mnt/dietpi_userdata/downloads/limits_status
	log=/mnt/dietpi_userdata/downloads/script.log

#Interface
	iface=eth0
	ifup=eth0
	ifdown=wlan0

#Priority
	High_Prio=0
	Con_Prio=1
	UL_Prio=1
	DL_Prio=3
	User_Prio=3
	Guest_Prio=7
	Local_Prio=7
	Low_Prio=7

#Bandwidth
	Local=100
	Download=$2
	Upload=900
	Guest=300
	Games_DOWN=4500
	Games_UP=4500

#HTB
	#quant="quantum 1474"

#FQ_CODEL
	fq_codel="fq_codel quantum 300"
	#fq_codel="pfifo_fast"

#PFIFO
	pfifo="pfifo limit 1000"
	pfifo_fast="pfifo_fast"
#SFQ
	sfq="sfq perturb 10"
#RATES

	#Download
	DL=$[Download]Kbit
	DL_Ceil=$[Download]Kbit
	#Upload
	UL=$[Upload]Kbit
	UL_Ceil=$[Upload]Kbit
	#User Speed
	User_DL=$[Download/6]Kbit
	User_DL_Ceil=$[Download/4]Kbit
	#Guest Speed
	Guest_DL=1Kbit
	Guest_DL_Ceil=$[Guest]Kbit
	#Games Speed
	Games_DL=$[Games_DOWN]Kbit
	Games_DL_Ceil=$[Games_DOWN]Kbit
	Games_UL=$[Games_UP]Kbit
	Games_UL_Ceil=$[Games_UP]Kbit
	#Local Speed
	Local_DL=$[Local]Mbit
	Local_Ceil=$[Local]Mbit
#############SETUP VARIABLES###############################################################################################

user_limit() {
	iface=$1 parent=$2 class=$3 rate=$4 ceil=$5 prio=$6 quant=$7 qdisc=$8 refresh=$9
	if [ -z "$refresh" ]
	then
		tc class add dev $iface parent 1:$parent classid 1:$class htb rate $rate ceil $ceil prio $prio $quant
			tc qdisc add dev $iface parent 1:$class $qdisc
	elif [ $refresh=="refresh" ]
	then
		tc class change dev $iface parent 1:$parent classid 1:$class htb rate $rate ceil $ceil prio $prio $quant
			tc qdisc replace dev $iface parent 1:$class $qdisc
	fi
}

user_limit_wlan() {
	iface=$1 parent=$2 class=$3 rate=$4 ceil=$5 prio=$6 quant=$7 qdisc=$8 refresh=$9
	if [ -z "$refresh" ]
	then
		tc class add dev $iface parent 1:$parent classid 1:$class htb rate $rate ceil $ceil prio $prio $quant
			tc qdisc add dev $iface parent 1:$class $qdisc
	elif [ $refresh=="refresh" ]
	then
		tc class change dev $iface parent 1:$parent classid 1:$class htb rate $rate ceil $ceil prio $prio $quant
			tc qdisc replace dev $iface parent 1:$class $qdisc
	fi
}

IPT_range() {
	iface=$1 iprange=$2 class=$3
	iptables -t mangle -A POSTROUTING -o $iface -m iprange $iprange -j CLASSIFY --set-class 1:$class
	iptables -t mangle -A POSTROUTING -o $iface -m iprange $iprange -j RETURN
}
wlan_setup() {
	tc qdisc add dev $ifdown root handle 1: htb default 5
		tc class add dev $ifdown parent 1: classid 1:1 htb rate $DL ceil $DL_Ceil prio $DL_Prio $quant
			user_limit_wlan $ifdown 1 2 $User_DL $User_DL_Ceil $User_Prio "$quant" "$pfifo_fast" "$refresh"
			user_limit_wlan $ifdown 1 5 $User_DL $User_DL_Ceil $User_Prio "$quant" "$pfifo_fast" "$refresh"
}
tc_setup() {
	#############SETUP BASE CONNECTION#########################################################################################
	tc qdisc add dev $iface root handle 1: htb default 100
	#############SETUP BASE CONNECTION#########################################################################################

	#############SETUP CLASSES#################################################################################################

	####INTERNET
		tc class add dev $iface parent 1: classid 1:1 htb rate $DL ceil $DL_Ceil prio $DL_Prio $quant
}
tc_classes() {
		refresh=$1
			##############ISLAM##########################
			user_limit $iface 1 2 $User_DL $User_DL_Ceil $User_Prio "$quant" "$fq_codel" "$refresh"
			##############HAMDY##########################
			user_limit $iface 1 3 $User_DL $User_DL_Ceil $User_Prio "$quant" "$fq_codel" "$refresh"
			##############AHMED##########################
			user_limit $iface 1 4 $User_DL $User_DL_Ceil $User_Prio "$quant" "$fq_codel" "$refresh"
			##############MARAM##########################
			user_limit $iface 1 5 $User_DL $User_DL_Ceil $User_Prio "$quant" "$fq_codel" "$refresh"
			##############MAMA###########################
			user_limit $iface 1 6 $User_DL $User_DL $Low_Prio "$quant" "$fq_codel" "$refresh"
			##############BABA###########################
			user_limit $iface 1 7 $User_DL $User_DL $Low_Prio "$quant" "$fq_codel" "$refresh"
			##############GUESTS##########################
			user_limit $iface 1 8 $Guest_DL $Guest_DL_Ceil $Guest_Prio "$quant" "$fq_codel" "$refresh"
			###############GAMES_DOWN#####################
			user_limit $iface 1 21 $Games_DL $Games_DL_Ceil $High_Prio "$quant" "$fq_codel" "$refresh"
			###############GAMES_UP#######################
			user_limit $iface 1 20 $Games_UL $Games_UL_Ceil $High_Prio "$quant" "$fq_codel" "$refresh"
			##############UPLOAD#########################
			user_limit $iface 1 100 $UL $UL_Ceil $UL_Prio "$quant" "$fq_codel" "$refresh"
		#CONNECTION_INITIATION
		user_limit $iface "" 10 $UL $UL_Ceil $UL_Prio "$quant" "$fq_codel" "$refresh"
	####LOCAL
		#LOCAL
		user_limit $iface "" 9 $Local_DL $Local_Ceil $Local_Prio "$quant" "$fq_codel" "$refresh"
	#############SETUP CLASSES#################################################################################################
}
IPT_setup() {
	#############SETUP IPTABLES################################################################################################

	##############GAME PRIORITIZE################
		#GAMES_UP
		#LOL
		iptables -t mangle -A POSTROUTING -p udp -m multiport --dports 5000:5500,8088 -j CONNMARK --set-mark 20
		iptables -t mangle -A POSTROUTING -p tcp -m multiport --dports 8393:8400,2099,5223,5222,8088 -j CONNMARK --set-mark 20
		iptables -t mangle -A POSTROUTING -m connmark --mark 20 -j CLASSIFY --set-class 1:20
		iptables -t mangle -A POSTROUTING -m connmark --mark 20 -j RETURN
		#GAMES_DOWN
		#LOL
		iptables -t mangle -A POSTROUTING -p udp -m multiport --sports 5000:5500,8088 -j CONNMARK --set-mark 21
		iptables -t mangle -A POSTROUTING -p tcp -m multiport --sports 8393:8400,2099,5223,5222,8088 -j CONNMARK --set-mark 21
		iptables -t mangle -A POSTROUTING -m connmark --mark 21 -j CLASSIFY --set-class 1:21
		iptables -t mangle -A POSTROUTING -m connmark --mark 21 -j RETURN
	###############TCP CONNECTION START###########
	iptables -t mangle -A POSTROUTING -p icmp -j CLASSIFY --set-class 1:10
	iptables -t mangle -A POSTROUTING -p icmp -j RETURN
	iptables -t mangle -A POSTROUTING -p tcp -m tcp --tcp-flags SYN,RST,ACK SYN -j CLASSIFY --set-class 1:10
	iptables -t mangle -A POSTROUTING -p tcp -m tcp --tcp-flags SYN,RST,ACK SYN -j RETURN
	##############NEW_PI#########################
	IPT_range $iface "--dst-range 192.168.1.18-192.168.1.19" 1
	##############GUESTS#########################
	IPT_range $iface "--dst-range 192.168.1.80-192.168.1.254" 8
	IPT_range $iface "--src-range 192.168.1.80-192.168.1.254" 8
	##############LOCAL##########################
	IPT_range $iface "--dst-range 192.168.1.2-192.168.1.254 --src-range 192.168.1.2-192.168.1.254" 9
	##############ISLAM##########################
	IPT_range $iface "--dst-range 192.168.1.20-192.168.1.29" 2
	##############HAMDY##########################
	IPT_range $iface "--dst-range 192.168.1.30-192.168.1.39" 3
	##############AHMED##########################
	IPT_range $iface "--dst-range 192.168.1.40-192.168.1.49" 4
	##############MARAM##########################
	IPT_range $iface "--dst-range 192.168.1.50-192.168.1.59" 5
	##############MAMA###########################
	IPT_range $iface "--dst-range 192.168.1.60-192.168.1.69" 6
	##############BABA###########################
	IPT_range $iface "--dst-range 192.168.1.70-192.168.1.79" 7
	#############SETUP ROUTING FILTERS#########################################################################################
}

start() {
	tc_setup
	tc_classes
	IPT_setup
}

stop() {
	tc qdisc del dev $iface root
    iptables -t mangle -F
}
stop_wlan() {
	tc qdisc del dev $ifdown root
    #iptables -t mangle -F
}

refresh() {
	tc_classes refresh
}
case "$1" in
    'start')
		start 2>&1 | tee $log
		if [ `echo "${PIPESTATUS[@]}" | tr -s ' ' + | bc` -ne 0 ]
		then
			echo Failed to start limits please restart or check script for errors | tee $status
		else
			echo Limits running | tee $status
		fi
		;;
    'stop')
		stop 2>&1 | tee $log
		if [ `echo "${PIPESTATUS[@]}" | tr -s ' ' + | bc` -ne 0 ]
		then 
			echo Already stopped / Failed to stop limits  | tee $status
		else 
			echo Limits Stopped | tee $status
		fi
		;;
    'status')
		echo $(<$status)
		;;
    'restart')
		limits stop ; echo "Sleeping..."; sleep 2 ;
		limits start $2
		;;
	'refresh')
		refresh $2
		;;
    'wlan')
		wlan_setup
		;;
    'stop_wlan')
		stop_wlan
		;;
	*)
		echo
		echo "Usage: $0 { start (state global download) | stop | restart (state global download) | refresh (state global download) | status}"
		echo
		exit 1
		;;
esac

exit 0